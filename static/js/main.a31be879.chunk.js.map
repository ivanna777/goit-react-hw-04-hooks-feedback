{"version":3,"sources":["Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","this","props","good","neutral","bad","total","positivePercentage","className","styles","Component","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","name","Section","title","children","Notification","message","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","e","currentTarget","alert","Math","floor","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAyCeA,E,4JApCX,WACI,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,gCACI,gCACI,sBAAMC,UAAWC,IAAO,iBAAxB,oBACA,+BAAON,OAEX,gCACI,sBAAMK,UAAWC,IAAO,iBAAxB,uBACA,+BAAOL,OAEX,gCACI,sBAAMI,UAAWC,IAAO,iBAAxB,mBACA,+BAAOJ,OAEX,gCACI,sBAAMG,UAAWC,IAAO,iBAAxB,qBACA,+BAAOH,OAEX,gCACI,sBAAME,UAAWC,IAAO,iBAAxB,iCACA,iCAAOF,EAAP,kB,GAvBKG,a,gBCDV,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAE/C,OACM,qBAAKL,UAAWC,IAAO,mBAAvB,SACCG,EAAQE,KAAI,SAACC,GAAD,OACb,wBAAQP,UAAWC,IAAO,cAA6BO,KAAK,SAASC,QAASJ,EAAiBK,KAAOH,EAAtG,SACGA,GAD4CA,QCN1C,SAASI,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAClC,OACI,gCACA,mCAAMD,KACDC,KCJF,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACjC,OACG,4BAAIA,ICEG,SAASC,IACtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAyBMC,EAAqB,kBAAMN,EAAeE,EAAkBE,GAOlE,OACE,gCACE,cAACX,EAAD,CAASC,MAAM,wBAAf,SACE,cAACT,EAAD,CACEC,QAAS,CAAC,eAAgB,kBAAmB,eAC7CC,gBAnCc,SAACoB,GAGrB,OAFiBA,EAAEC,cAAchB,MAG/B,IAAK,eACHS,EAAgBD,EAAe,GAE/B,MACF,IAAK,kBACHG,EAAmBD,EAAkB,GAErC,MACF,IAAK,cACHG,EAAeD,EAAc,GAE7B,MAEF,QACEK,MAAM,mBAoBR,cAAChB,EAAD,CAASC,MAAM,aAAf,SACGY,IACC,cAAC,EAAD,CACE7B,KAAMuB,EACNtB,QAASwB,EACTvB,IAAKyB,EACLxB,MAAO0B,IACPzB,mBAnBHyB,IACEI,KAAKC,MAAOX,EAAeM,IAAwB,KADxB,OAsB5B,cAACV,EAAD,CAAcC,QAAQ,2BCvDhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,gBAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,kBAAkB,yCAAyC,aAAa,uC","file":"static/js/main.a31be879.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Statistics.module.css\"\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span className={styles[\"feedback-type\"]}>Good: </span>\r\n                    <span>{good}</span>\r\n                </div>\r\n                <div>\r\n                    <span className={styles[\"feedback-type\"]}>Neutral: </span>\r\n                    <span>{neutral}</span>\r\n                </div>\r\n                <div>\r\n                    <span className={styles[\"feedback-type\"]}>Bad: </span>\r\n                    <span>{bad}</span>\r\n                </div>\r\n                <div>\r\n                    <span className={styles[\"feedback-type\"]}>Total: </span>\r\n                    <span>{total}</span>\r\n                </div>\r\n                <div>\r\n                    <span className={styles[\"feedback-type\"]}>Positive feedback: </span>\r\n                    <span>{positivePercentage} %</span>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number\r\n}\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback}) {\r\n  \r\n    return (\r\n          <div className={styles[\"options-wrapper\"]}>\r\n          {options.map((option) => (\r\n          <button className={styles[\"option-btn\"]} key={ option} type=\"button\" onClick={onLeaveFeedback} name ={option}>\r\n            {option}\r\n          </button>\r\n            ))}\r\n            \r\n      </div> \r\n        )\r\n    }\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Section ({ title, children }) {\r\n        return (\r\n            <div>\r\n            <h1> {title}</h1>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n","import PropTypes from 'prop-types';\r\n \r\nexport default function Notification({message}) {\r\n     return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}\r\n","import { useState } from \"react\";\r\nimport Statistics from \"./Components/Statistics\";\r\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\r\nimport Section from \"./Components/Section\";\r\nimport Notification from \"./Components/Notification\";\r\n\r\nexport default function App() {\r\n  const [goodFeedback, setGoodFeedback] = useState(0);\r\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\r\n  const [badFeedback, setBadFeedback] = useState(0);\r\n\r\n  const leaveFeedback = (e) => {\r\n    const feedback = e.currentTarget.name;\r\n\r\n    switch (feedback) {\r\n      case \"goodFeedback\":\r\n        setGoodFeedback(goodFeedback + 1);\r\n\r\n        break;\r\n      case \"neutralFeedback\":\r\n        setNeutralFeedback(neutralFeedback + 1);\r\n\r\n        break;\r\n      case \"badFeedback\":\r\n        setBadFeedback(badFeedback + 1);\r\n\r\n        break;\r\n\r\n      default:\r\n        alert(\"Try again\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => goodFeedback + neutralFeedback + badFeedback;\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    if (!countTotalFeedback()) return null;\r\n    return Math.floor((goodFeedback / countTotalFeedback()) * 100);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={[\"goodFeedback\", \"neutralFeedback\", \"badFeedback\"]}\r\n          onLeaveFeedback={leaveFeedback}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() ? (\r\n          <Statistics\r\n            good={goodFeedback}\r\n            neutral={neutralFeedback}\r\n            bad={badFeedback}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback-type\":\"Statistics_feedback-type__1AFfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options-wrapper\":\"FeedbackOptions_options-wrapper__1iJC4\",\"option-btn\":\"FeedbackOptions_option-btn__3ZDXW\"};"],"sourceRoot":""}